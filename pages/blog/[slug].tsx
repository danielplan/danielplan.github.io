import Head from "next/head";
import styles from "@styles/pages/Blog.module.scss";
import {Post, PrismaClient} from "@prisma/client";
import Image from "next/image";

interface Props {
    post: Post;
}

const Post = ({post}: Props) => {
    return (
        <>
            <Head>
                <title>{post.name} - daniel plan</title>
                <meta name="description" content="Generated by create next app"/>
            </Head>
            <main className={styles.main}>
                <div className={styles.image}>
                    <Image
                        src={post.preview_image}
                        alt=""
                        objectFit="cover"
                        layout="fill"
                    />
                    <div className={styles.container + " " + styles.blogTitle}>
                        <h1>{post.name}</h1>
                    </div>
                </div>
                <div className={styles.container}>
                    <p className={styles.lead}>{post.lead}</p>
                    <div className={styles.content} dangerouslySetInnerHTML={{__html: post.body}}></div>
                </div>
            </main>
        </>
    );
};

type Params = {
    params: {
        slug: String;
    };
};

export async function getStaticProps({params}: Params) {
    const prisma = new PrismaClient();
    const post = await prisma.post.findFirst({
        where: {
            slug: {
                equals: params.slug.toString(),
            },
        },
    });

    return {
        props: {post},
    };
}

export async function getStaticPaths() {
    const prisma = new PrismaClient();
    const posts = await prisma.post.findMany({});
    return {
        paths: posts.map((post) => {
            return {
                params: {
                    slug: post.slug,
                },
            };
        }),
        fallback: false,
    };
}

export default Post;
